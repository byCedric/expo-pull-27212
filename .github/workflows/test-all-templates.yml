name: test all templates

on:
  workflow_dispatch:
    inputs:
      folderName:
        description: The folder name to use when generating project
        default: test-template

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  template:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        template:
          - expo-template-tabs
          - expo-template-blank
          - expo-template-blank-typescript
          - expo-template-bare-minimum

    steps:
      - name: üèó Setup repository
        uses: actions/checkout@v4

      - name: üèó Setup fork
        uses: ./.github/actions/setup-fork

      - name: üß™ Create ${{ matrix.template }}
        run: node ./fork/packages/create-expo ./${{ github.event.inputs.folderName }} --template ${{ matrix.template }}
        env:
          EXPO_NO_TELEMETRY: "true"
          npm_config_user_agent: "bun/1.x.x" # Force-use bun

      - name: üßë‚Äç‚öïÔ∏è Check ${{ matrix.template }}
        run: bunx expo-doctor
        continue-on-error: true
        working-directory: ./${{ github.event.inputs.folderName }}

      - name: ‚ÑπÔ∏è Read structure
        working-directory: ./${{ github.event.inputs.folderName }}
        run: >
          find . -type f -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./bun.lockb" -print0 |
            while IFS= read -r -d '' line; do
              echo "::group::$line";
              cat $line;
              echo "::endgroup::";
            done

      - name: ‚ÑπÔ∏è Read config
        run: bun expo config
        working-directory: ./${{ github.event.inputs.folderName }}
